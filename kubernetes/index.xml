<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kubernetes on Moyrne Blog</title>
    <link>https://blog.moyrn.com/kubernetes/</link>
    <description>Recent content in Kubernetes on Moyrne Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sat, 13 Feb 2021 22:38:54 +0800</lastBuildDate><atom:link href="https://blog.moyrn.com/kubernetes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Deployment 水平扩容和滚动更新</title>
      <link>https://blog.moyrn.com/kubernetes/rollout_uptodate/</link>
      <pubDate>Sat, 13 Feb 2021 22:38:54 +0800</pubDate>
      
      <guid>https://blog.moyrn.com/kubernetes/rollout_uptodate/</guid>
      <description>概念   Deployment 所管理的 Pod 的 ownerReference 就是 ReplicaSet
  Deployment 会拥有多个ReplicaSet, 不同的 ReplicaSet 代表不同的版本
  关系图   Deployment 状态字段
 DESIRED：用户期望的 Pod 副本个数（spec.replicas 的值）； CURRENT：当前处于 Running 状态的 Pod 的个数； UP-TO-DATE：当前处于最新版本的 Pod 的个数，所谓最新版本指的是 Pod 的 Spec 部分与 Deployment 里 Pod 模板里定义的完全一致； AVAILABLE：当前已经可用的 Pod 的个数，即：既是 Running 状态，又是最新版本，并且已经处于 Ready（健康检查正确）状态的 Pod 的个数。    ReplicaSet 状态字段 DESIRED、CURRENT 和 READY，与 Deployment 一致，Deployment 仅多出 UP-TO-DATE 状态
  滚动更新 RollingUpdateStrategy 在“滚动更新”的过程中永远都会确保至少有 2 个 Pod 处于可用状态，至多只有 4 个 Pod 同时存在于集群中 旧版本RS的Pod数量递减，新版本RS的Pod数量递增</description>
    </item>
    
    <item>
      <title>Pod 对象</title>
      <link>https://blog.moyrn.com/kubernetes/pod_project/</link>
      <pubDate>Fri, 12 Feb 2021 15:07:14 +0800</pubDate>
      
      <guid>https://blog.moyrn.com/kubernetes/pod_project/</guid>
      <description>Volume  Projected Volume 将预先设置好的数据投射到容器中，  Secret    volumes: - name: mysql-cred  projected: sources: - secret: name: user  - secret: name: pass - ConfigMap - DownwardAPI - ServiceAccountToken restartPolicy livenessProbe   只要 Pod 的 restartPolicy 指定的策略允许重启异常的容器（比如：Always），那么这个 Pod 就会保持 Running 状态，并进行容器重启。否则，Pod 就会进入 Failed 状态 。
  对于包含多个容器的 Pod，只有它里面所有的容器都进入异常状态后，Pod 才会进入 Failed 状态。在此之前，Pod 都是 Running 状态。此时，Pod 的 READY 字段会显示正常容器的个数，比如：
$ kubectl get pod test-liveness-exec NAME READY STATUS RESTARTS AGE liveness-exec 0/1 Running 1 1m   livenessProbe HTTP Or TCP, 多用于Web服务健康检查, Web服务中暴露出健康检查URL</description>
    </item>
    
    <item>
      <title>Kubeadm 搭建K8s集群</title>
      <link>https://blog.moyrn.com/kubernetes/kubeadm_start/</link>
      <pubDate>Sun, 07 Feb 2021 13:56:54 +0800</pubDate>
      
      <guid>https://blog.moyrn.com/kubernetes/kubeadm_start/</guid>
      <description>前置操作 (每台机器上都需要操作)  使用系统 Centos 7  cat /etc/redhat-release CentOS Linux release 7.9.2009 (Core)  关闭防火墙  systemctl stop firewalld &amp;amp;&amp;amp; systemctl disable firewalld  禁用SELINUX  vim /etc/selinux/config # 或者修改/etc/sysconfig/selinux SELINUX=disabled  修改 k8s.conf  cat &amp;lt;&amp;lt;EOF &amp;gt; /etc/sysctl.d/k8s.conf net.bridge.bridge-nf-call-ip6tables = 1 net.bridge.bridge-nf-call-iptables = 1 EOF sysctl --system  关闭 swap  swapoff -a vim /etc/fstab # 注释掉以下字段 /dev/mapper/cl-swap swap swap defaults 0 0 reboot  使用yum安装 docker-ce docker-ce-selinux  # step 1: 安装必要的一些系统工具 sudo yum install -y yum-utils device-mapper-persistent-data lvm2 # Step 2: 添加软件源信息 sudo yum-config-manager --add-repo http://mirrors.</description>
    </item>
    
    <item>
      <title>Kubernetes入门-基础</title>
      <link>https://blog.moyrn.com/kubernetes/before_start/</link>
      <pubDate>Sat, 06 Feb 2021 10:13:46 +0800</pubDate>
      
      <guid>https://blog.moyrn.com/kubernetes/before_start/</guid>
      <description>CPU
CGroup 设置cpu可使用时间   文件系统隔离
Mount NameSpace + mount(&amp;#34;none&amp;#34;,&amp;#34;/tmp&amp;#34;,&amp;#34;tmpfs&amp;#34;,0,&amp;#34;&amp;#34;)   为 结点 打上污点 禁止其它Pod在结点上启动
kubectl taint nodes node1 foo=bar:NoSchedule   rook 安装 按顺序执行以下命令
$ kubectl apply -f https://raw.githubusercontent.com/rook/rook/master/cluster/examples/kubernetes/ceph/common.yaml $ kubectl apply -f https://raw.githubusercontent.com/rook/rook/master/cluster/examples/kubernetes/ceph/operator.yaml # 在 apply cluster.yaml 之前, 需要先apply crds.yaml, 否则会报错 no matches for kind &amp;#34;CephCluster&amp;#34; in version &amp;#34;ceph.rook.io/v1&amp;#34; $ kubectl apply -f https://raw.githubusercontent.com/rook/rook/master/cluster/examples/kubernetes/ceph/crds.yaml $ kubectl apply -f https://raw.githubusercontent.com/rook/rook/master/cluster/examples/kubernetes/ceph/cluster.yaml   [20210211] docker 多阶段构建,减小体积（示例）
FROMgolang:1.15 ENV GOPROXY=https://goproxy.</description>
    </item>
    
  </channel>
</rss>
